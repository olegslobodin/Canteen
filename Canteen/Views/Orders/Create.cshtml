@using Canteen.Models
@using Microsoft.AspNet.Identity
@model Canteen.ViewModels.OrderViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Order</h4>
        @if (ViewBag.NotEnoughMoney is bool && (bool)ViewBag.NotEnoughMoney)
        {
            <div class="text-danger">You have not enough money!</div>
        }
        @if (!User.IsInRole("Admin"))
        {
            <div>Your budget is @ViewBag.Budget</div>
        }
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.DishIds, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ListBox("DishIds", (MultiSelectList)ViewBag.Dishes, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DishIds, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (User.IsInRole("Admin"))
        {
            <div class="form-group">
                @Html.LabelFor(model => model.UserId, "UserId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("UserId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else
        {
            @Html.Hidden("UserId", User.Identity.GetUserId())
        }

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (User.IsInRole("Admin"))
                {
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", id = "price" } })
                }
                else
                {
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", id = "price", @readonly = "" } })
                }
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/CreateOrder.js")
}
